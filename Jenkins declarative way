def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}



pipeline{

agent any

tools {
  maven 'maven3.8.4'
  
}

triggers {
  pollSCM ('* * * * *')
}

options {
  timestamps()
}
stages{
  stage('CheckoutCode'){
      
  steps{
    sendSlackNotifications('STARTED') 
    
  git branch: 'development', credentialsId: 'g', url: 'https://github.com/mahesh2853/maven-web-application.git'
  }
  }

stage('Build'){
  steps{
  sh "mvn clean package"
  }
  }
  
  stage('ExecuteSonarQubeReport'){
  steps{
  sh "mvn sonar:sonar"
  }
  }

 stage('UploadArtifactsintoNexusServer'){
  steps{
  sh "mvn deploy"
  }
  }

stage('DeployApplicationintoTomcatServer'){
  steps{
sshagent(['304675f1-190d-432d-89de-6a7e595d2bbf']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.152.102:/opt/apache-tomcat-9.0.62/webapps/"
}
}
}

}//Stages Closing
post {
  success {
   sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}

}//Pipeline Closing
